// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type { BaseClientOptions, SchemaInference } from "@xata.io/client";
import dotenv from "dotenv";
import path from "path";

// dotenv.config({ path: "../../.env" });

const tables = [] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type DatabaseSchema = {};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Dawid-Seipold-s-workspace-ni8fto.eu-west-1.xata.sh/db/blazar",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient({
    apiKey: Bun.env.XATA_API_KEY,
  });
  return instance;
};
